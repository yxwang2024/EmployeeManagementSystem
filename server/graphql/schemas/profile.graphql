type Query {
  getAllProfiles: [Profile]
  getProfile(id: ID!): Profile
  getProfileConnection(
    first: Int
    after: String
    last: Int
    before: String
    query: String
  ): ProfileConnection
}

type ProfileConnection {
  totalCount: Int
  edges: [ProfileEdge]
  pageInfo: PageInfo
}

type ProfileEdge {
  cursor: String
  node: Profile
}

extend type Mutation {
  updateProfileName(input: NameInput): Profile
  updateProfileIdentity(input: IdentityInput): Profile
  updateProfileCurrentAddress(input: AddressInput): Profile
  updateProfileContactInfo(input: ContactInfoInput): Profile
  updateProfileEmployment(input: EmploymentInput): Profile
  updateProfileReference(input: ReferenceInput): Profile
  updateProfileEmergencyContact(input: EmergencyContactUpdateInput): Profile
  updateProfileDocuments(input: DocumentsUpdateInput): Profile
}

type Name {
  firstName: String!
  middleName: String
  lastName: String!
  preferredName: String
}

type Identity {
  ssn: String!
  dob: String!
  gender: String!
}

type Address {
  street: String!
  building: String
  city: String!
  state: String!
  zip: String!
}

type ContactInfo {
  cellPhone: String!
  workPhone: String
}

type Employment {
  visaTitle: String!
  startDate: String!
  endDate: String!
}

type Reference {
  firstName: String!
  lastName: String!
  middleName: String
  phone: String!
  email: String!
  relationship: String!
}

type EmergencyContact {
  id:ID!
  firstName: String!
  lastName: String!
  middleName: String
  phone: String
  email: String
  relationship: String!
}

type Profile {
  id: ID!
  email: String!
  name: Name
  profilePicture: String
  identity: Identity
  currentAddress: Address
  contactInfo: ContactInfo
  employment: Employment
  reference: Reference
  emergencyContacts: [EmergencyContact]
  documents: [Document]
}

input NameInput {
  id: ID!
  firstName: String!
  middleName: String
  lastName: String!
  preferredName: String
}

input IdentityInput {
  id: ID!
  ssn: String!
  dob: String!
  gender: String!
}

input ProfilePictureInput {
  id: ID!
  profilePicture: String!
}

input AddressInput {
  id: ID!
  street: String!
  building: String
  city: String!
  state: String!
  zip: String!
}

input ContactInfoInput {
  id: ID!
  cellPhone: String!
  workPhone: String
}

input EmploymentInput {
  id: ID!
  visaTitle: String!
  startDate: String!
  endDate: String!
}

input ReferenceInput {
  id: ID!
  firstName: String!
  lastName: String!
  middleName: String
  phone: String!
  email: String!
  relationship: String!
}

input EmergencyContactInput {
  firstName: String!
  lastName: String!
  middleName: String
  phone: String
  email: String
  relationship: String!
}

input EmergencyContactUpdateInput {
  id: ID!
  emergencyContacts: [EmergencyContactInput]!
}

input DocumentUpdateInput{
    _id: ID!
    title: String!
    timestamp: String!
    filename: String!
    url: String!
    key: String!
}

input DocumentsUpdateInput {
  id: ID!
  documents: [DocumentUpdateInput]!
}


